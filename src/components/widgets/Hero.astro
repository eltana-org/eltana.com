---
import { Icon } from 'astro-icon/components';
import { Picture } from '@astrojs/image/components';

interface CallToAction {
  text: string;
  href: string;
  target: string;
  rel: string;
  icon?: string;
  enabled?: boolean;
}

export interface Props {
  padding?: any;
  title?: string;
  subtitle?: string;
  content?: string;
  callToAction?: any | CallToAction;
  callToAction2?: any | CallToAction;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  padding,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  content = await Astro.slots.render('content'),
  callToAction = await Astro.slots.render('callToAction'),
  callToAction2 = await Astro.slots.render('callToAction2'),
  image = await Astro.slots.render('image'),
} = Astro.props;

var paddingCss = 'py-12 md:py-20';
if (padding !== '' && padding !== null && padding) {
  paddingCss = padding;
}
---

<section class="relative md:-mt-[76px]">
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class={paddingCss}>
      <div class="text-center pb-10 md:pb-16 max-w-screen-lg mx-auto">
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
            {
              callToAction && callToAction?.enabled && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction === 'string' ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a
                      class="btn btn-primary sm:mb-0 w-full"
                      href={callToAction?.href}
                      target={callToAction?.target}
                      rel={callToAction?.rel}
                    >
                      {callToAction?.icon && (
                        <>
                          <Icon name={callToAction?.icon} class="w-5 h-5 mr-1 -ml-1.5" />
                        </>
                      )}
                      {callToAction?.text}
                    </a>
                  )}
                </div>
              )
            }
            {
              callToAction2 && callToAction2?.enabled === true && (
                <div class="flex w-full sm:w-auto">
                  {typeof callToAction2 === 'string' ? (
                    <Fragment set:html={callToAction2} />
                  ) : (
                    <a
                      class="btn w-full"
                      target={callToAction2?.target}
                      rel={callToAction2?.rel}
                      href={callToAction2?.href}
                    >
                      {callToAction2?.icon && (
                        <>
                          <Icon name={callToAction2?.icon} class="w-5 h-5 mr-1 -ml-1.5" />
                        </>
                      )}
                      {callToAction2?.text}
                    </a>
                  )}
                </div>
              )
            }
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {
          image && image?.enabled && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Picture
                  class="mx-auto rounded-md w-full"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  aspectRatio={1024 / 576}
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
